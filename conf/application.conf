# This is the main configuration file for the application.
# For production instances various keys are overridden in
# a prod.conf file.
# ~~~~~


# Database configuration
#db.default.driver = com.mysql.jdbc.Driver
#db.default.url = "jdbc:mysql://localhost:3306/docview?useUnicode=true&characterEncoding=UTF-8"
db.default.driver = org.postgresql.Driver
db.default.url = "jdbc:postgresql://localhost/docview"
db.default.username = docview
db.default.password = changeme

# Enable to log statements, along with changing
# logback config appropriately
db.default.logSql = false

# Play config
play {

  # Guice modules - these can be overridden for testing
  modules.enabled += "guice.AppModule"
  modules.enabled += "guice.AuthModule"
  modules.enabled += "guice.AdminModule"
  modules.enabled += "guice.SearchModule"
  modules.enabled += "guice.GuidesModule"

  evolutions {
    # we are using PostgreSQL w/ transactional DDL
    autocommit = false
    autoApply = true
  }

  http.secret.key = "N7`o^vr4ygopSn=1hmQDSSBH65bMOd;rg_TURS055[BoBJ8xm7pp?YSbxph6EL=N"
  http.secret.key=${?APPLICATION_SECRET}

  filters {

    csrf {
      header {
        bypassHeaders {
          X-Requested-With = "*"
          Csrf-Token = "nocheck"
        }
      }
    }

    headers {
      contentSecurityPolicy: null
    }

    enabled += "play.filters.cors.CORSFilter"
    cors {
      pathPrefixes = ["/api"]
    }
  }

  i18n {
    # The application languages
    # ~~~~~
    langs = ["en", "fr", "de", "pl"]
  }

  modules {
    http {
      requestHandler = "play.http.DefaultHttpRequestHandler"
    }
  }

  mailer {
    host: localhost
    debug: no
  }

  ws.timeout.idle = 5 minutes

  # Cache configuration
  # This is just used for the named cache that backs the
  # admin data transformation API
  cache {
    bindCaches = ["transformer-cache"]
  }
}

services {
  # the main EHRI backend
  ehridata {
    host: localhost
    port: 7474
    mountPoint: ehri
    secure: false
    #username: neo4j
    #password: changeme
  }

  # Cypher for arbitrary queries...
  cypher {
    host: localhost
    port: 7474
    mountPoint: "db/data/transaction/commit"
    secure: false
  }

  legacyCypher {
    host: localhost
    port: 7474
    mountPoint: "db/data/cypher"
    secure: false
  }

  # Solr search engine
  solr {
    host: localhost
    port: 8983
    mountPoint: "solr/portal"
    secure: false
  }

  geocoding {
    parallelism: 3
  }
}

# Yuck - specify where the indexer binary is location...
# Overridden by the prod config
solr.indexer.jar = ${?HOME}/dev/play/ehri-frontend/bin/indexer.jar

# Contexts for Play's thread pools. Mostly the default context
# is used. See: https://www.playframework.com/documentation/2.3.0/ThreadPools
contexts {
  blocking-io {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 10
    }
  }

  db-writes {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 10
    }
  }

  simple-db-lookups {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 20
    }
  }
}

# Akka S3 defaults
alpakka.s3.aws {
    path-style-access: false
    credentials.provider: static
    region.provider: static
}


# Capcha key - override in prod
recaptcha.key.public = 6LcEhOcSAAAAAPBP07JcXJJJL7nQbsDVQSaiHIHt
recaptcha.key.private = 6LcEhOcSAAAAAOTZqZYDeLdXv0911i-yUuMKEPrr

# Don't show recaptcha
recaptcha.skip = true

# How long the session takes to timeout
auth.session.timeout = 7 days

# Storage configuration
storage {
    # override the instance in prod config
    instance: dev

    # Classifier is basically the bucket name on AWS S3.
    # Config refers to a block of configuration matching
    # the Alpakka reference.conf:
    # https://github.com/akka/alpakka/blob/master/s3/src/main/resources/reference.conf
    # Make sure this is defined, i.e. config = ${alpakka.s3}
    portal {
        classifier = disk-a
        config = {}
    }

    # Classifier for DAM storage
    dam {
        classifier = disk-b
        config = {}
    }
}

# EHRI specific config
ehri {
    backend {
        # Controls certain properties that are always requested from the
        # backend in serialization.
        # For the moment we always want the user's image url
        includedProperties = ["imageUrl"]

        # How long to cache backend data for...
        cacheExpiration = 5 minutes
    }

    # THIS ENSURES SECURED ROUTES ARE SECURED. MAKE SURE IT'S EITHER
    # UNDEFINED OR TRUE IN A PRODUCTION ENVIRONMENT (defaults to true)
    secured = true

    # Whether this instance has https enabled. Production instances
    # should enable this where applicable
    https = false

    # Is this a staging instance?
    staging = false

    # Minimum delay between rendering signup form
    # and allowing submission. If this setting is not
    # defined then no timeout check will take place.
    signup.timeCheckSeconds = 5

    # Minumum password length in chars
    passwords.minLength = 6

    # Log message max length
    logMessage.maxLength = 400

    # Readonly check file - a path to a file on the server's
    # local system. If this file exists than the portal will
    # run in readonly mode, which prevents users from logging
    # (and by extension, changing things.)
    readonly.file = "READONLY"

    # Maintenance check file - a path to a file on the server's
    # local system. If this file exists than the portal will
    # run in maintenance mode, which return 503 service
    # unavailable for all requests.
    maintenance.file = "MAINTENANCE"

    # IP filter file. Sometimes we want to shut down the service
    # for everyone except a few specific addresses. If this file
    # is present and contains a list of IP addresses, one per line,
    # the incoming request will be checked against that list and
    # the user show a 503 if they're not among those IPs.
    ipfilter.file = "IP_WHITELIST"

    # Message file - a path to a file which contains a message
    # we want to show to the user on every request, e.g. "this
    # server will be going down in 1 hour for maintance".
    message.file = "MESSAGE"

    # Whether or not we should attempt to resolve moved pages
    # in the moved pages DB:
    handlePageMoved = true

    # Rate limiting - this applies to certain actions and prevents
    # a single IP from POSTing some forms (e.g. login form) more than
    # a certain number of times in a given period
    ratelimit {
        limit: 20     # number of requests
        timeout: 1 hour
    }

    oauth2 {
        sessionExpiration = 30 minutes
    }

    # Portal specific config
    portal {
        # Script or style HTML appended to <head> for analytics
        # or dynamic content, e.g. surveys.
        # Use multiline ("""...""") strings.
        extraHeadContent = ""

        # URL for the banner image on the home page
        bannerImageUrl = ""

        # URL to the manual pages
        manualUrl: "http://example.com/manual"

        # Mailing list signup page URL
        mailingListUrl = "http://example.com/mailinglist"

        # RSS feeds  for the front page
        externalFeed {
          news {
            rss: "https://ehri-project.eu/rss.xml"
            numItems: 3
          }
          blog {
            rss: "https://blog.ehri-project.eu/feed/"
            numItems: 3
          }
        }

        # Should users be logged in to view the portal?
        secured = false

        # Default user groups for portal signups
        defaultUserGroups = ["portal"]

        # Moderator groups, used for annotation visibility
        # "all" is for all types of data. Specific entity
        # types can override this
        # "moderators" is just the name of the moderators
        # group in the fixtures
        moderators {
            all: ["moderators"]
        }

        # show a feedback submission form
        feedback.enabled = true

        # Copy feedback mails to this address
        feedback.copyTo: ["test@example.com"]
        feedback.site.copyTo: ["site@example.com"]
        feedback.data.copyTo: ["site@example.com"]

        # Misc emails
        emails {
          privacy:  "privacy@example.com"
          feedback: "feedback@example.com"
          info:     "info@example.com"
          help:     "help@example.com"
          messages: "messages@example.com"
        }

        # Contact info
        contact {
            address: ["London"]
        }

        profile {
          maxImageSize: 5MB
        }
    }

    admin {
        accessPoints {
            # Constrain access point suggestions to specific
            # vocabularies/authority sets by adding their IDs
            # the the holders list
            holders: []
        }

        dataManager {
            cacheExpiration = 2 hours
            maxTransformationSize = 5000000
        }
    }

    # SKOS/RDF export config. This sets the default baseURI for
    # SKOS-format exported vocabularies and (potentially) other
    # types of data.
    lod {
        CvocVocabulary {
            baseUri: "http://data.ehri-project.eu/vocabularies/"
        }
    }
}

# Ensure indexer does not idle timeout
akka.http.host-connection-pool.client.idle-timeout = 5 minutes

# system-specific overrides and extensions
include "search.conf"
include "form-config.conf"
include "oauth2.conf"
include "parse.conf"
include "aws.conf"
include "dos.conf"
include "external_pages.conf"
include "api-keys.conf"

