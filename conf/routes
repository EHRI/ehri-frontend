# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#GET     /login           controllers.Application.login
#POST     /login           controllers.Application.loginPost

# OpenID
GET     /login                          controllers.Application.login
POST	/login							controllers.Application.loginPost
GET     /logout                         controllers.Application.logout

# Plugin-handled login
# OpenID
GET     /openid                         controllers.OpenIDLoginHandler.openIDCallback
POST	/openid							controllers.OpenIDLoginHandler.loginPost

# Mozilla Persona
POST	/persona						controllers.PersonaLoginHandler.loginPost

GET     /logout           controllers.Application.logout
POST     /logout           controllers.Application.logout

GET		/test			  controllers.Application.test

GET     /mailTest           controllers.Application.mailTest
POST     /mailTest           controllers.Application.mailTestPost

# Home page
GET     /                           controllers.Application.index
GET     /docs/list           controllers.DocumentaryUnits.list(page: Int ?= 1, limit: Int ?=20)
GET     /docs/show/:id       controllers.DocumentaryUnits.get(id: String)
GET     /docs/json/:id       controllers.DocumentaryUnits.getJson(id: String)
GET     /docs/delete/:id     controllers.DocumentaryUnits.delete(id: String)
POST    /docs/delete/:id     controllers.DocumentaryUnits.deletePost(id: String)
GET     /docs/update/:id     controllers.DocumentaryUnits.update(id: String)
POST    /docs/update/:id     controllers.DocumentaryUnits.updatePost(id: String)
GET     /docs/create/:id     controllers.DocumentaryUnits.docCreate(id: String)
POST    /docs/create/:id     controllers.DocumentaryUnits.docCreatePost(id: String)
GET     /docs/visibility/:id     controllers.DocumentaryUnits.visibility(id: String)
POST    /docs/visibility/:id     controllers.DocumentaryUnits.visibilityPost(id: String)
GET     /docs/permissions/:id/manage_    controllers.DocumentaryUnits.managePermissions(id: String, page: Int ?= 1, limit: Int ?=20)
GET     /docs/permissions/:id/manage    controllers.DocumentaryUnits.manageScopedPermissions(id: String, page: Int ?= 1, spage: Int ?= 1, limit: Int ?=20)
GET     /docs/permissions/:id/add    controllers.DocumentaryUnits.addItemPermissions(id: String)
GET     /docs/permissions/:id/:userType/:userId    controllers.DocumentaryUnits.permissionItem(id: String, userType: String, userId: String)
POST    /docs/permissions/:id/:userType/:userId    controllers.DocumentaryUnits.permissionItemPost(id: String, userType: String, userId: String)
GET     /docs/scope/:id/add    controllers.DocumentaryUnits.addScopedPermissions(id: String)
GET     /docs/scope/:id/:userType/:userId    controllers.DocumentaryUnits.permissionScope(id: String, userType: String, userId: String)
POST    /docs/scope/:id/:userType/:userId    controllers.DocumentaryUnits.permissionScopePost(id: String, userType: String, userId: String)

GET     /users/list           controllers.UserProfiles.list(page: Int ?= 1, limit: Int ?=20)
GET     /users/show/:id       controllers.UserProfiles.get(id: String)
GET     /users/json/:id       controllers.UserProfiles.getJson(id: String)
GET     /users/create         controllers.UserProfiles.create
POST    /users/create         controllers.UserProfiles.createPost
GET     /users/delete/:id     controllers.UserProfiles.delete(id: String)
POST    /users/delete/:id     controllers.UserProfiles.deletePost(id: String)
GET     /users/update/:id     controllers.UserProfiles.update(id: String)
POST    /users/update/:id     controllers.UserProfiles.updatePost(id: String)
GET     /users/permissions/:id     controllers.UserProfiles.permissions(id: String)
POST    /users/permissions/:id     controllers.UserProfiles.permissionsPost(id: String)
GET     /users/permissions/:id/list     controllers.UserProfiles.grantList(id: String, page: Int ?= 1, limit: Int ?=20)
GET     /users/visibility/:id     controllers.UserProfiles.visibility(id: String)
POST    /users/visibility/:id     controllers.UserProfiles.visibilityPost(id: String)
GET     /users/permissions/:id/manage    controllers.UserProfiles.managePermissions(id: String, page: Int ?= 1, limit: Int ?=20)
GET     /users/permissions/:id/add    controllers.UserProfiles.addItemPermissions(id: String)
GET     /users/permissions/:id/:userType/:userId    controllers.UserProfiles.permissionItem(id: String, userType: String, userId: String)
POST    /users/permissions/:id/:userType/:userId    controllers.UserProfiles.permissionItemPost(id: String, userType: String, userId: String)

GET     /group/list           controllers.Groups.list(page: Int ?= 1, limit: Int ?=20)
GET     /group/show/:id       controllers.Groups.get(id: String)
GET     /group/json/:id       controllers.Groups.getJson(id: String)
GET     /group/create         controllers.Groups.create
POST    /group/create         controllers.Groups.createPost
GET     /group/delete/:id     controllers.Groups.delete(id: String)
POST    /group/delete/:id     controllers.Groups.deletePost(id: String)
GET     /group/update/:id     controllers.Groups.update(id: String)
POST    /group/update/:id     controllers.Groups.updatePost(id: String)
GET     /group/permissions/:id     controllers.Groups.permissions(id: String)
POST    /group/permissions/:id     controllers.Groups.permissionsPost(id: String)
GET     /group/permissions/:id/list     controllers.Groups.grantList(id: String, page: Int ?= 1, limit: Int ?=20)
GET     /group/visibility/:id     controllers.Groups.visibility(id: String)
POST    /group/visibility/:id     controllers.Groups.visibilityPost(id: String)
GET		/group/members/:userType/:userId	controllers.Groups.membership(userType: String, userId: String)
GET		/group/add/:id/:userType/:userId	controllers.Groups.addMember(id: String, userType: String, userId: String)
POST	/group/add/:id/:userType/:userId	controllers.Groups.addMemberPost(id: String, userType: String, userId: String)
GET		/group/remove/:id/:userType/:userId	controllers.Groups.removeMember(id: String, userType: String, userId: String)
POST	/group/remove/:id/:userType/:userId	controllers.Groups.removeMemberPost(id: String, userType: String, userId: String)
GET     /group/permissions/:id/manage    controllers.Groups.managePermissions(id: String, page: Int ?= 1, limit: Int ?=20)
GET     /group/permissions/:id/add    controllers.Groups.addItemPermissions(id: String)
GET     /group/permissions/:id/:userType/:userId    controllers.Groups.permissionItem(id: String, userType: String, userId: String)
POST    /group/permissions/:id/:userType/:userId    controllers.Groups.permissionItemPost(id: String, userType: String, userId: String)


GET     /agent/list           controllers.Agents.list(page: Int ?= 1, limit: Int ?=20)
GET     /agent/show/:id       controllers.Agents.get(id: String)
GET     /agent/json/:id       controllers.Agents.getJson(id: String)
GET     /agent/create         controllers.Agents.create
POST    /agent/create         controllers.Agents.createPost
GET     /agent/delete/:id     controllers.Agents.delete(id: String)
POST    /agent/delete/:id     controllers.Agents.deletePost(id: String)
GET     /agent/update/:id     controllers.Agents.update(id: String)
POST    /agent/update/:id     controllers.Agents.updatePost(id: String)
GET     /agent/create/:id     controllers.Agents.docCreate(id: String)
POST    /agent/create/:id     controllers.Agents.docCreatePost(id: String)
GET     /agent/visibility/:id     controllers.Agents.visibility(id: String)
POST    /agent/visibility/:id     controllers.Agents.visibilityPost(id: String)
GET     /agent/permissions/:id/manage_    controllers.Agents.managePermissions(id: String, spage: Int ?= 1, limit: Int ?=20)
GET     /agent/permissions/:id/manage    controllers.Agents.manageScopedPermissions(id: String, page: Int ?= 1, spage: Int ?= 1, limit: Int ?=20)
GET     /agent/permissions/:id/add    controllers.Agents.addItemPermissions(id: String)
GET     /agent/permissions/:id/:userType/:userId    controllers.Agents.permissionItem(id: String, userType: String, userId: String)
POST    /agent/permissions/:id/:userType/:userId    controllers.Agents.permissionItemPost(id: String, userType: String, userId: String)
GET     /agent/scope/:id/add    controllers.Agents.addScopedPermissions(id: String)
GET     /agent/scope/:id/:userType/:userId    controllers.Agents.permissionScope(id: String, userType: String, userId: String)
POST    /agent/scope/:id/:userType/:userId    controllers.Agents.permissionScopePost(id: String, userType: String, userId: String)

GET     /action/list           controllers.ActionLogs.list(page: Int ?= 1, limit: Int ?=20)
GET     /action/show/:id       controllers.ActionLogs.get(id: String)
GET     /history/:id        controllers.ActionLogs.historyFor(id: String, page: Int ?=1, limit: Int ?=20)

# API
GET     /api/*path               controllers.ApiController.get(path: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


