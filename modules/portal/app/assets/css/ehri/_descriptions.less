.description-notice-text {
  &:extend(.small);
  background-color: @pale-gray;
  color: @almost-black;
  font-style: italic;
  padding: @medium-padding;
}

.descriptions {
  .make-row();
  .description-viewport {
    .make-sm-column(9);
    .make-sm-column-pull(3);
  }
  .description-sidebar {
    .make-sm-column(3);
    .make-sm-column-push(9);
  }

}

.description-footer {
  margin-top: @medium-margin;

  .import-disclaimer {
    &:extend(.description-notice-text);
  }
}

.date-period > td {
  padding-right: @small-padding;
}

.item-header {
  .other-name-list {
    font-size: 1.3em;
    &:extend(.list-unstyled, .list-inline, .text-mute);
    display: block;
  }

  h1, h2 {
    margin-top: 0;
  }
  margin-bottom: @large-margin;
}

.description-holder {

  .description-annotations {
    position: relative;
  }
  .description-section, .description-annotations {

    padding-bottom: @medium-padding;

    &.empty {
      display: none;
    }
  }
}

.item-text-field {
  position: relative;
  .make-row();
  //margin-bottom: @small-margin;
  padding-top: @small-padding;

  .item-text-field-header {
    .make-md-column(3);

    font-size: @font-size-base * 1.1; // 1.1em?
    margin-top: 0;
    margin-bottom: 0;
    font-weight: bold;
  }

  .item-text-field-list {
    &:extend(.list-unstyled);
    // Allows both left-to-right and right-to-left elements
    // in the same list
    li {
      text-align: unset;
    }
  }

  .item-text-field-value {
    .make-md-column(9);

    @media (min-width: @screen-xs-min)  and (max-width: @screen-sm-max) {
      text-indent: 1em;
    }

    // Reset code formatting, since code blocks are probably
    // an artifact of dodgy markdown formatting :|
    code {
      color: inherit;
      white-space: inherit;
      font-size: inherit;
      padding: inherit;
      background-color: inherit;
    }
  }
}

.item-meta {
  @width: 200px;
  &:extend(.panel, .panel-default);
  dd {
    &:extend(.clearfix all); // Clear the floated `dt` if an empty `dd` is present
  }

  @media (min-width: @grid-float-breakpoint) {
    dt {
      float: left;
      width: @width;
      clear: left;
      text-align: right;
      .text-overflow();
    }
    dd {
      margin-left: @width + @large-margin;
    }
  }

  border-bottom: 1px solid @table-border-color;

  &:last-child {
    border-bottom: 0;
  }
}

.item-meta-alternate-identifiers ul, .item-meta-languages ul {
  margin-bottom: inherit;
  &:extend(.list-unstyled);
}

.archival-context, .child-items {
  a {
    font-size: 1.1em;
  }
  .ancestor {
    padding-left: @medium-padding;
    margin-bottom: @medium-margin;
  }

  margin-bottom: @large-margin;
}

.resolved-access-point, .unresolved-access-point {
  .access-point-description {
    &:extend(.text-muted, .small);
  }
}

.item-links {
  &:extend(.list-unstyled);
}

.item-link {
  .link-target {
    font-size: 1.1em;
    padding: @small-padding 0;
  }
  .link-description {
    &:extend(.small, .text-muted);
  }
  margin-bottom: @small-margin;
  border-bottom: 1px dashed @dark-gray;
}


.export-formats {
  &:extend(.list-unstyled);
}

.sidepanel-toc {
  background-color: #ffffff;

  &:extend(.hidden-xs, .hidden-sm);
}

.affix-bottom {
  position: absolute;
}

.affix {
  z-index: 1000;
  top: 10px;
}

.other-name-list-small {
  font-weight: bold;
  &:extend(.small, .list-unstyled);
}

.empty-description {
  .well;
  .well-sm;
}