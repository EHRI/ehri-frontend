# Routes for core functionality

# API
GET     /api/:id                                @controllers.core.ApiController.getAny(id: String)
GET     /api/:contentType/list                  @controllers.core.ApiController.listItems(contentType: String)
GET     /api/:contentType/:id                   @controllers.core.ApiController.getItem(contentType: String, id: String)
GET     /api/*path                              @controllers.core.ApiController.get(path: String)

# Change locale
GET     /locale/:lang                           @controllers.core.Application.changeLocale(lang: String)
GET     /localeData                             @controllers.core.Application.localeData(lang: String ?= "en")

# API Sparql queries - TESTING
GET     /sparql                                 @controllers.core.ApiController.sparql
GET     /sparqlQuery                            @controllers.core.ApiController.sparqlQuery

# Generic item redirection
GET /item/:id                                   @controllers.core.Application.get(id: String)
GET /anyitem/:id                                @controllers.core.Application.getGeneric(id: String)
GET /item/:type/:id                             @controllers.core.Application.getType(type: String, id: String)

# Simple filtering
GET /filter                                     @controllers.core.SearchFilter.filter

# Admin routes - FIXME: Move to admin controller when reverse-route dependencies are resolved
GET     /createUser                             @controllers.core.Admin.createUser
POST    /createUser                             @controllers.core.Admin.createUserPost

GET     /events                                 @controllers.core.SystemEvents.list
GET     /events/show/:id                        @controllers.core.SystemEvents.get(id: String)

GET     /users                                  @controllers.core.UserProfiles.search
GET     /users/list                             @controllers.core.UserProfiles.list
GET     /users/show/:id                         @controllers.core.UserProfiles.get(id: String)
GET     /users/history/:id                      @controllers.core.UserProfiles.history(id: String)
GET     /users/delete/:id                       @controllers.core.UserProfiles.delete(id: String)
POST    /users/delete/:id                       @controllers.core.UserProfiles.deletePost(id: String)
GET     /users/update/:id                       @controllers.core.UserProfiles.update(id: String)
POST    /users/update/:id                       @controllers.core.UserProfiles.updatePost(id: String)
GET     /users/permissions/:id                  @controllers.core.UserProfiles.permissions(id: String)
POST    /users/permissions/:id                  @controllers.core.UserProfiles.permissionsPost(id: String)
GET     /users/permissions/:id/list             @controllers.core.UserProfiles.grantList(id: String)
GET     /users/permissions/revoke/:id/:perm     @controllers.core.UserProfiles.revokePermission(id: String, perm: String)
POST    /users/permissions/revoke/:id/:perm     @controllers.core.UserProfiles.revokePermissionPost(id: String, perm: String)

GET     /group                                  @controllers.core.Groups.list
GET     /group/show/:id                         @controllers.core.Groups.get(id: String)
GET     /group/history/:id                      @controllers.core.Groups.history(id: String)
GET     /group/create                           @controllers.core.Groups.create
POST    /group/create                           @controllers.core.Groups.createPost
GET     /group/delete/:id                       @controllers.core.Groups.delete(id: String)
POST    /group/delete/:id                       @controllers.core.Groups.deletePost(id: String)
GET     /group/update/:id                       @controllers.core.Groups.update(id: String)
POST    /group/update/:id                       @controllers.core.Groups.updatePost(id: String)
GET     /group/permissions/:id                  @controllers.core.Groups.permissions(id: String)
POST    /group/permissions/:id                  @controllers.core.Groups.permissionsPost(id: String)
GET     /group/permissions/:id/list             @controllers.core.Groups.grantList(id: String)
GET     /group/permissions/revoke/:id/:perm     @controllers.core.Groups.revokePermission(id: String, perm: String)
POST    /group/permissions/revoke/:id/:perm     @controllers.core.Groups.revokePermissionPost(id: String, perm: String)
GET		/group/members/:userType/:userId	    @controllers.core.Groups.membership(userType: defines.EntityType.Value, userId: String)
GET		/group/add/:id/:userType/:userId	    @controllers.core.Groups.addMember(id: String, userType: defines.EntityType.Value, userId: String)
POST	/group/add/:id/:userType/:userId	    @controllers.core.Groups.addMemberPost(id: String, userType: defines.EntityType.Value, userId: String)
GET		/group/remove/:id/:userType/:userId	    @controllers.core.Groups.removeMember(id: String, userType: defines.EntityType.Value, userId: String)
POST	/group/remove/:id/:userType/:userId	    @controllers.core.Groups.removeMemberPost(id: String, userType: defines.EntityType.Value, userId: String)

GET /assets/*file       controllers.core.Assets.at(path="/public", file)