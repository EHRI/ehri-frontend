# Countries

GET     /                                       @controllers.countries.Countries.search(params: services.search.SearchParams ?= services.search.SearchParams.empty, paging: utils.PageParams ?= utils.PageParams.empty)
GET     /create                                 @controllers.countries.Countries.create
POST    /create                                 @controllers.countries.Countries.createPost
GET     /:id                                    @controllers.countries.Countries.get(id: String, params: services.search.SearchParams ?= services.search.SearchParams.empty, paging: utils.PageParams ?= utils.PageParams.empty)
GET     /:id/history                            @controllers.countries.Countries.history(id: String, range: utils.RangeParams ?= utils.RangeParams.empty)
GET     /:id/delete                             @controllers.countries.Countries.delete(id: String, paging: utils.PageParams ?= utils.PageParams.empty)
POST    /:id/delete                             @controllers.countries.Countries.deletePost(id: String)
GET     /:id/update                             @controllers.countries.Countries.update(id: String)
POST    /:id/update                             @controllers.countries.Countries.updatePost(id: String)
GET     /:id/create                             @controllers.countries.Countries.createRepository(id: String)
POST    /:id/create                             @controllers.countries.Countries.createRepositoryPost(id: String)
GET     /:id/visibility                         @controllers.countries.Countries.visibility(id: String)
POST    /:id/visibility                         @controllers.countries.Countries.visibilityPost(id: String)
GET     /:id/permissions/manage                 @controllers.countries.Countries.managePermissions(id: String, paging: utils.PageParams ?= utils.PageParams.empty, paging_s: utils.PageParams ?= utils.PageParams.empty)
GET     /:id/permissions/add                    @controllers.countries.Countries.addItemPermissions(id: String)
GET     /:id/permissions/:userType/:userId      @controllers.countries.Countries.setItemPermissions(id: String, userType: models.EntityType.Value, userId: String)
POST    /:id/permissions/:userType/:userId      @controllers.countries.Countries.setItemPermissionsPost(id: String, userType: models.EntityType.Value, userId: String)
GET     /:id/scope/add                          @controllers.countries.Countries.addScopedPermissions(id: String)
GET     /:id/scope/:userType/:userId            @controllers.countries.Countries.setScopedPermissions(id: String, userType: models.EntityType.Value, userId: String)
POST    /:id/scope/:userType/:userId            @controllers.countries.Countries.setScopedPermissionsPost(id: String, userType: models.EntityType.Value, userId: String)
GET     /:id/geocode                            @controllers.countries.Countries.geocode(id: String)
GET     /:id/geocode/monitor                    @controllers.countries.Countries.geocodeMonitor(id: String, jobId: String)
