# Routes for authority files and authoritative sets

GET     /                              @controllers.authorities.HistoricalAgents.search
GET     /list                          @controllers.authorities.HistoricalAgents.list
GET     /:id                           @controllers.authorities.HistoricalAgents.get(id: String)
GET     /:id/history                   @controllers.authorities.HistoricalAgents.history(id: String)
GET     /:id/delete                    @controllers.authorities.HistoricalAgents.delete(id: String)
POST    /:id/delete                    @controllers.authorities.HistoricalAgents.deletePost(id: String)
GET     /:id/update                    @controllers.authorities.HistoricalAgents.update(id: String)
POST    /:id/update                    @controllers.authorities.HistoricalAgents.updatePost(id: String)
GET     /:id/visibility                @controllers.authorities.HistoricalAgents.visibility(id: String)
POST    /:id/visibility                @controllers.authorities.HistoricalAgents.visibilityPost(id: String)
GET     /:id/perms/manage              @controllers.authorities.HistoricalAgents.managePermissions(id: String)
GET     /:id/perms/add                 @controllers.authorities.HistoricalAgents.addItemPermissions(id: String)
GET     /:id/perms/:userType/:userId   @controllers.authorities.HistoricalAgents.setItemPermissions(id: String, userType: EntityType.Value, userId: String)
POST    /:id/perms/:userType/:userId   @controllers.authorities.HistoricalAgents.setItemPermissionsPost(id: String, userType: EntityType.Value, userId: String)
GET     /:id/link                      @controllers.authorities.HistoricalAgents.linkTo(id: String)
GET     /:id/link/:toType              @controllers.authorities.HistoricalAgents.linkAnnotateSelect(id: String, toType: EntityType.Value)
GET     /:id/link/:toType/:to          @controllers.authorities.HistoricalAgents.linkAnnotate(id: String, toType: EntityType.Value, to: String)
POST    /:id/link/:toType/:to          @controllers.authorities.HistoricalAgents.linkAnnotatePost(id: String, toType: EntityType.Value, to: String)
