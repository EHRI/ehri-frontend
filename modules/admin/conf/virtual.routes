# Virtual Documentary Units

GET     /                                            @controllers.virtual.VirtualUnits.search
GET     /create                                      @controllers.virtual.VirtualUnits.create
POST    /create                                      @controllers.virtual.VirtualUnits.createPost
GET     /:id                                         @controllers.virtual.VirtualUnits.get(id: String)
GET     /:via/:id                                    @controllers.virtual.VirtualUnits.getInVc(via: String, id: String)
GET     /:id/history                                 @controllers.virtual.VirtualUnits.history(id: String)
GET     /:id/delete                                  @controllers.virtual.VirtualUnits.delete(id: String)
POST    /:id/delete                                  @controllers.virtual.VirtualUnits.deletePost(id: String)
GET     /:id/update                                  @controllers.virtual.VirtualUnits.update(id: String)
POST    /:id/update                                  @controllers.virtual.VirtualUnits.updatePost(id: String)
GET     /:id/create                                  @controllers.virtual.VirtualUnits.createChild(id: String)
GET     /:id/createRef                               @controllers.virtual.VirtualUnits.createChildRef(id: String)
POST    /:id/createRef                               @controllers.virtual.VirtualUnits.createChildRefPost(id: String)
POST    /:id/create                                  @controllers.virtual.VirtualUnits.createChildPost(id: String)
GET     /:id/createDescription                       @controllers.virtual.VirtualUnits.createDescription(id: String)
POST    /:id/createDescription                       @controllers.virtual.VirtualUnits.createDescriptionPost(id: String)
GET     /:id/createRef/:did                          @controllers.virtual.VirtualUnits.createDescriptionRef(id: String, did: String)
POST    /:id/createRef/:did                          @controllers.virtual.VirtualUnits.createDescriptionRefPost(id: String, did: String)
GET     /:id/updateDescription/:did                  @controllers.virtual.VirtualUnits.updateDescription(id: String, did: String)
POST    /:id/updateDescription/:did                  @controllers.virtual.VirtualUnits.updateDescriptionPost(id: String, did: String)
GET     /:id/deleteDescription/:did                  @controllers.virtual.VirtualUnits.deleteDescription(id: String, did: String)
POST    /:id/deleteDescription/:did                  @controllers.virtual.VirtualUnits.deleteDescriptionPost(id: String, did: String)
GET     /:id/visibility                              @controllers.virtual.VirtualUnits.visibility(id: String)
POST    /:id/visibility                              @controllers.virtual.VirtualUnits.visibilityPost(id: String)
GET     /:id/permissions/manage                      @controllers.virtual.VirtualUnits.managePermissions(id: String)
GET     /:id/permissions/add                         @controllers.virtual.VirtualUnits.addItemPermissions(id: String)
GET     /:id/permissions/:userType/:userId           @controllers.virtual.VirtualUnits.setItemPermissions(id: String, userType: EntityType.Value, userId: String)
POST    /:id/permissions/:userType/:userId           @controllers.virtual.VirtualUnits.setItemPermissionsPost(id: String, userType: EntityType.Value, userId: String)
GET     /:id/scope/add                               @controllers.virtual.VirtualUnits.addScopedPermissions(id: String)
GET     /:id/scope/:userType/:userId                 @controllers.virtual.VirtualUnits.setScopedPermissions(id: String, userType: EntityType.Value, userId: String)
POST    /:id/scope/:userType/:userId                 @controllers.virtual.VirtualUnits.setScopedPermissionsPost(id: String, userType: EntityType.Value, userId: String)
GET     /:id/link                                    @controllers.virtual.VirtualUnits.linkTo(id: String)
GET     /:id/link/:toType                            @controllers.virtual.VirtualUnits.linkAnnotateSelect(id: String, toType: EntityType.Value)
GET     /:id/link/:toType/:to                        @controllers.virtual.VirtualUnits.linkAnnotate(id: String, toType: EntityType.Value, to: String)
POST    /:id/link/:toType/:to                        @controllers.virtual.VirtualUnits.linkAnnotatePost(id: String, toType: EntityType.Value, to: String)
GET     /:id/linkm                                   @controllers.virtual.VirtualUnits.linkMultiAnnotate(id: String)
POST    /:id/linkm                                   @controllers.virtual.VirtualUnits.linkMultiAnnotatePost(id)
POST    /:id/linkjs/:accessPoint                     @controllers.virtual.VirtualUnits.createLink(id: String, accessPoint: String)
GET     /:id/linkjs/:accessPoint                     @controllers.virtual.VirtualUnits.getLink(id: String, accessPoint: String)
POST    /:id/linkjs                                  @controllers.virtual.VirtualUnits.createMultipleLinks(id: String)
POST    /:id/deleteLink/:link                        @controllers.virtual.VirtualUnits.deleteLink(id: String, link: String)

