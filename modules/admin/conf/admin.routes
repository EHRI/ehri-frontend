# Routes for user- and group-related functionality

# Generic item redirection
GET     /item/:id                               @controllers.admin.Admin.get(id: String)
GET     /item/:type/:id                         @controllers.admin.Admin.getType(type: String, id: String)

# API
GET     /api/:id                                @controllers.admin.ApiController.getAny(id: String)
GET     /api/:contentType/list                  @controllers.admin.ApiController.listItems(contentType: defines.EntityType.Value)
GET     /api/:contentType/:id                   @controllers.admin.ApiController.getItem(contentType: defines.EntityType.Value, id: String)
GET     /api/*path                              @controllers.admin.ApiController.get(path: String)

# API Sparql and Cypher queries - TESTING
GET     /cypher                                 @controllers.admin.ApiController.cypher
GET     /cypherQuery                            @controllers.admin.ApiController.cypherQuery
GET     /sparql                                 @controllers.admin.ApiController.sparql
GET     /sparqlQuery                            @controllers.admin.ApiController.sparqlQuery

->  /users      users.Routes
->  /groups     groups.Routes
->  /events     events.Routes
->  /annotation annotation.Routes
->  /linking    linking.Routes

->  /units          units.Routes
->  /institutions   institutions.Routes
->  /virtual        virtual.Routes
->  /countries      countries.Routes
->  /sets           sets.Routes
->  /authorities    authorities.Routes
->  /vocabularies   vocabularies.Routes
->  /keywords       keywords.Routes


GET /assets/*file                               controllers.admin.Assets.at(path="/public", file)
