# Concept routes

GET     /                                           @controllers.keywords.Concepts.search(params: services.search.SearchParams ?= services.search.SearchParams.empty, paging: utils.PageParams ?= utils.PageParams.empty)
GET     /list                                       @controllers.keywords.Concepts.list(paging: utils.PageParams ?= utils.PageParams.empty)
GET     /:id                                        @controllers.keywords.Concepts.get(id: String, paging: utils.PageParams ?= utils.PageParams.empty)
GET     /:id/history                                @controllers.keywords.Concepts.history(id: String, range: utils.RangeParams ?= utils.RangeParams.empty)
GET     /:id/delete                                 @controllers.keywords.Concepts.delete(id: String)
POST    /:id/delete                                 @controllers.keywords.Concepts.deletePost(id: String)
GET     /:id/update                                 @controllers.keywords.Concepts.update(id: String)
POST    /:id/update                                 @controllers.keywords.Concepts.updatePost(id: String)
GET     /:id/create                                 @controllers.keywords.Concepts.createConcept(id: String)
POST    /:id/create                                 @controllers.keywords.Concepts.createConceptPost(id: String)
GET     /:id/visibility                             @controllers.keywords.Concepts.visibility(id: String)
POST    /:id/visibility                             @controllers.keywords.Concepts.visibilityPost(id: String)
GET     /:id/broader                                @controllers.keywords.Concepts.setBroader(id: String)
POST    /:id/broader                                @controllers.keywords.Concepts.setBroaderPost(id: String)
GET     /:id/link                                   @controllers.keywords.Concepts.linkTo(id: String)
GET     /:id/link/:toType                           @controllers.keywords.Concepts.linkAnnotateSelect(id: String, toType: models.EntityType.Value, params: services.search.SearchParams ?= services.search.SearchParams.empty, paging: utils.PageParams ?= utils.PageParams.empty)
GET     /:id/link/:toType/:to                       @controllers.keywords.Concepts.linkAnnotate(id: String, toType: models.EntityType.Value, to: String)
POST    /:id/link/:toType/:to                       @controllers.keywords.Concepts.linkAnnotatePost(id: String, toType: models.EntityType.Value, to: String)
