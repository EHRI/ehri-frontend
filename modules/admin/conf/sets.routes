GET     /                                  @controllers.sets.AuthoritativeSets.list
GET     /create                            @controllers.sets.AuthoritativeSets.create
POST    /create                            @controllers.sets.AuthoritativeSets.createPost
GET     /:id                               @controllers.sets.AuthoritativeSets.get(id: String)
GET     /:id/history                       @controllers.sets.AuthoritativeSets.history(id: String)
GET     /:id/delete                        @controllers.sets.AuthoritativeSets.delete(id: String)
POST    /:id/delete                        @controllers.sets.AuthoritativeSets.deletePost(id: String)
GET     /:id/update                        @controllers.sets.AuthoritativeSets.update(id: String)
POST    /:id/update                        @controllers.sets.AuthoritativeSets.updatePost(id: String)
GET     /:id/create                        @controllers.sets.AuthoritativeSets.createHistoricalAgent(id: String)
POST    /:id/create                        @controllers.sets.AuthoritativeSets.createHistoricalAgentPost(id: String)
GET     /:id/visibility                    @controllers.sets.AuthoritativeSets.visibility(id: String)
POST    /:id/visibility                    @controllers.sets.AuthoritativeSets.visibilityPost(id: String)
GET     /:id/permissions/manage            @controllers.sets.AuthoritativeSets.managePermissions(id: String)
GET     /:id/permissions/add               @controllers.sets.AuthoritativeSets.addItemPermissions(id: String)
GET     /:id/permissions/:userType/:userId @controllers.sets.AuthoritativeSets.setItemPermissions(id: String, userType: EntityType.Value, userId: String)
POST    /:id/permissions/:userType/:userId @controllers.sets.AuthoritativeSets.setItemPermissionsPost(id: String, userType: EntityType.Value, userId: String)
GET     /:id/scope/add                     @controllers.sets.AuthoritativeSets.addScopedPermissions(id: String)
GET     /:id/scope/:userType/:userId       @controllers.sets.AuthoritativeSets.setScopedPermissions(id: String, userType: EntityType.Value, userId: String)
POST    /:id/scope/:userType/:userId       @controllers.sets.AuthoritativeSets.setScopedPermissionsPost(id: String, userType: EntityType.Value, userId: String)
GET     /:id/reindex                       @controllers.sets.AuthoritativeSets.updateIndex(id: String)
POST    /:id/reindex                       @controllers.sets.AuthoritativeSets.updateIndexPost(id: String)
GET     /:id/export                        @controllers.sets.AuthoritativeSets.export(id: String)
