# Routes for vocabularies and concepts

GET     /vocabularies                                        @controllers.vocabs.Vocabularies.list
GET     /vocabularies/:id                                    @controllers.vocabs.Vocabularies.get(id: String)
GET     /vocabularies/:id/history                            @controllers.vocabs.Vocabularies.history(id: String)
GET     /vocabularies/create                                 @controllers.vocabs.Vocabularies.create
POST    /vocabularies/create                                 @controllers.vocabs.Vocabularies.createPost
GET     /vocabularies/:id/delete                             @controllers.vocabs.Vocabularies.delete(id: String)
POST    /vocabularies/:id/delete                             @controllers.vocabs.Vocabularies.deletePost(id: String)
GET     /vocabularies/:id/update                             @controllers.vocabs.Vocabularies.update(id: String)
POST    /vocabularies/:id/update                             @controllers.vocabs.Vocabularies.updatePost(id: String)
GET     /vocabularies/:id/create                             @controllers.vocabs.Vocabularies.createConcept(id: String)
POST    /vocabularies/:id/create                             @controllers.vocabs.Vocabularies.createConceptPost(id: String)
GET     /vocabularies/:id/visibility                         @controllers.vocabs.Vocabularies.visibility(id: String)
POST    /vocabularies/:id/visibility                         @controllers.vocabs.Vocabularies.visibilityPost(id: String)
GET     /vocabularies/:id/permissions/manage                 @controllers.vocabs.Vocabularies.managePermissions(id: String)
GET     /vocabularies/:id/permissions/add                    @controllers.vocabs.Vocabularies.addItemPermissions(id: String)
GET     /vocabularies/:id/permissions/:userType/:userId      @controllers.vocabs.Vocabularies.setItemPermissions(id: String, userType: EntityType.Value, userId: String)
POST    /vocabularies/:id/permissions/:userType/:userId      @controllers.vocabs.Vocabularies.setItemPermissionsPost(id: String, userType: EntityType.Value, userId: String)
GET     /vocabularies/:id/scope/add                          @controllers.vocabs.Vocabularies.addScopedPermissions(id: String)
GET     /vocabularies/:id/scope/:userType/:userId            @controllers.vocabs.Vocabularies.setScopedPermissions(id: String, userType: EntityType.Value, userId: String)
POST    /vocabularies/:id/scope/:userType/:userId            @controllers.vocabs.Vocabularies.setScopedPermissionsPost(id: String, userType: EntityType.Value, userId: String)
GET     /vocabularies/:id/reindex                            @controllers.vocabs.Vocabularies.updateIndex(id: String)
POST    /vocabularies/:id/reindex                            @controllers.vocabs.Vocabularies.updateIndexPost(id: String)

GET     /keywords/meta/:id                                   @controllers.vocabs.Concepts.getClientJson(id)
GET     /keywords                                            @controllers.vocabs.Concepts.search
GET     /keywords/list                                       @controllers.vocabs.Concepts.list
GET     /keywords/:id                                        @controllers.vocabs.Concepts.get(id: String)
GET     /keywords/:id/history                                @controllers.vocabs.Concepts.history(id: String)
GET     /keywords/:id/delete                                 @controllers.vocabs.Concepts.delete(id: String)
POST    /keywords/:id/delete                                 @controllers.vocabs.Concepts.deletePost(id: String)
GET     /keywords/:id/update                                 @controllers.vocabs.Concepts.update(id: String)
POST    /keywords/:id/update                                 @controllers.vocabs.Concepts.updatePost(id: String)
GET     /keywords/:id/create                                 @controllers.vocabs.Concepts.createConcept(id: String)
POST    /keywords/:id/create                                 @controllers.vocabs.Concepts.createConceptPost(id: String)
GET     /keywords/:id/visibility                             @controllers.vocabs.Concepts.visibility(id: String)
POST    /keywords/:id/visibility                             @controllers.vocabs.Concepts.visibilityPost(id: String)
GET     /keywords/:id/permissions/manage                     @controllers.vocabs.Concepts.managePermissions(id: String)
GET     /keywords/:id/permissions/add                        @controllers.vocabs.Concepts.addItemPermissions(id: String)
GET     /keywords/:id/permissions/:userType/:userId          @controllers.vocabs.Concepts.setItemPermissions(id: String, userType: EntityType.Value, userId: String)
POST    /keywords/:id/permissions/:userType/:userId          @controllers.vocabs.Concepts.setItemPermissionsPost(id: String, userType: EntityType.Value, userId: String)
GET     /keywords/:id/scope/add                              @controllers.vocabs.Concepts.addScopedPermissions(id: String)
GET     /keywords/:id/scope/:userType/:userId                @controllers.vocabs.Concepts.setScopedPermissions(id: String, userType: EntityType.Value, userId: String)
POST    /keywords/:id/scope/:userType/:userId                @controllers.vocabs.Concepts.setScopedPermissionsPost(id: String, userType: EntityType.Value, userId: String)
GET     /keywords/:id/link/:toType/:to                       @controllers.vocabs.Concepts.linkAnnotate(id: String, toType: EntityType.Value, to: String)
POST    /keywords/:id/link/:toType/:to                       @controllers.vocabs.Concepts.linkAnnotatePost(id: String, toType: EntityType.Value, to: String)

GET /assets/*file                                            controllers.vocabs.Assets.at(path="/public", file)

